// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// MessageQueue is an autogenerated mock type for the MessageQueue type
type MessageQueue struct {
	mock.Mock
}

// PublishMessage provides a mock function with given fields: ctx, exchangeName, routingKey, message
func (_m *MessageQueue) PublishMessage(ctx context.Context, exchangeName string, routingKey string, message interface{}) error {
	ret := _m.Called(ctx, exchangeName, routingKey, message)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string, string, interface{}) error); ok {
		r0 = rf(ctx, exchangeName, routingKey, message)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewMessageQueue interface {
	mock.TestingT
	Cleanup(func())
}

// NewMessageQueue creates a new instance of MessageQueue. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMessageQueue(t mockConstructorTestingTNewMessageQueue) *MessageQueue {
	mock := &MessageQueue{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
